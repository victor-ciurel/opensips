cachedb_cassandra Module
     __________________________________________________________

   Table of Contents

   1. Admin Guide

        1.1. Overview
        1.2. Advantages
        1.3. Limitations
        1.4. Dependencies

              1.4.1. OpenSIPS Modules
              1.4.2. External Libraries or Applications

        1.5. Exported Parameters

              1.5.1. cachedb_url (string)
              1.5.2. connection_timeout (int)
              1.5.3. send_timeout (int)
              1.5.4. receive_timeout (int)
              1.5.5. wr_consistency_level (int)
              1.5.6. rd_consistency_level (int)
              1.5.7. exec_threshold (int)

        1.6. Exported Functions
        1.7. Known issues

   2. Contributors

        2.1. By Commit Statistics
        2.2. By Commit Activity

   3. Documentation

        3.1. Contributors

   List of Tables

   2.1. Top contributors by DevScore^(1), authored commits^(2) and
          lines added/removed^(3)

   2.2. Most recently active contributors^(1) to this module

   List of Examples

   1.1. Set cachedb_url parameter
   1.2. Use Cassandra servers
   1.3. Set connection_timeout parameter
   1.4. Set send_timeout parameter
   1.5. Set receive_timeout parameter
   1.6. Set wr_consistency_level parameter
   1.7. Set rd_consistency_level parameter
   1.8. Set exec_threshold parameter

Chapter 1. Admin Guide

1.1. Overview

   This module is an implementation of a cache system designed to
   work with Cassandra servers. It uses the Key-Value interface
   exported from the core.

1.2. Advantages

     * memory costs are no longer on the server
     * many servers can be used inside a cluster, so the memory is
       virtually unlimited
     * the cache is 100% persistent. A restart of OpenSIPS server
       will not affect the DB. The Cassandra DB is also persistent
       so it can also be restarted without loss of information.
     * Cassandra is an open-source project so it can be used to
       exchange data with various other applications
     * By creating a Cassandra Cluster, multiple OpenSIPS
       instances can easily share key-value information

1.3. Limitations

     * keys (in key:value pairs) may not contain spaces or control
       characters

1.4. Dependencies

1.4.1. OpenSIPS Modules

   None.

1.4.2. External Libraries or Applications

   The following libraries or applications must be installed
   before running OpenSIPS with this module loaded:
     * thrift 0.6.1
       Thrift 0.6.1 can be downloaded from
       http://archive.apache.org/dist/thrift/ Download the
       archive, extract sources, run ./configure,make,sudo make
       install.

1.5. Exported Parameters

1.5.1. cachedb_url (string)

   The urls of the server groups that OpenSIPS will connect to in
   order to use the from script cache_store,cache_fetch, etc
   operations. It can be set more than one time. The prefix part
   of the URL will be the identifier that will be used from the
   script. The database part of the URL needs to be in the format
   Keyspace_ColumnFamily_CounterFamily

   Example 1.1. Set cachedb_url parameter
...
modparam("cachedb_cassandra", "cachedb_url","cassandra:group1://localhos
t:9061/Keyspace1_Users_Counters");
modparam("cachedb_cassandra", "cachedb_url","cassandra:cluster1://random
_url:8888/Keyspace2_Keys_CounterF");
...

   Example 1.2. Use Cassandra servers
...
cache_store("cassandra:group1","key","$ru value");
cache_fetch("cassandra:cluster1","key",$avp(10));
cache_remove("cassandra:cluster1","key");
...

1.5.2. connection_timeout (int)

   The timeout in ms that will be triggered in case a connection
   attempt fails.

   Example 1.3. Set connection_timeout parameter
...
modparam("cachedb_cassandra", "connection_timeout",1000);
...

1.5.3. send_timeout (int)

   The timeout in ms that will be triggered in case a Cassandra
   write takes too long

   Example 1.4. Set send_timeout parameter
...
modparam("cachedb_cassandra", "send_timeout",1000);
...

1.5.4. receive_timeout (int)

   The timeout in ms that will be triggered in case a Cassandra
   read takes too long

   Example 1.5. Set receive_timeout parameter
...
modparam("cachedb_cassandra", "receive_timeout",1000);
...

1.5.5. wr_consistency_level (int)

   The consistency level desired for write operations. Options are
   :
     * 1 - Ensure that the write has been written to at least 1
       replica's commit log and memory table before responding to
       the client.
     * 2 - Ensure that the write has been written to N / 2 + 1
       replicas before responding to the client.
     * 3 - Ensure that the write has been written to
       ReplicationFactor / 2 + 1 nodes, within the local
       datacenter (requires NetworkTopologyStrategy)
     * 4 - Ensure that the write has been written to
       ReplicationFactor / 2 + 1 nodes in each datacenter
       (requires NetworkTopologyStrategy)
     * 5 - Ensure that the write is written to all N replicas
       before responding to the client. Any unresponsive replicas
       will fail the operation.
     * 6 - Ensure that the write has been written to at least 1
       node, including HintedHandoff recipients.
     * 7 - Ensure that the write has been written to at least 2
       replica's before responding to the client.
     * 8 - Ensure that the write has been written to at least 3
       replica's before responding to the client.

   Default is 1

   Example 1.6. Set wr_consistency_level parameter
...
modparam("cachedb_cassandra", "wr_consistency_level",7);
...

1.5.6. rd_consistency_level (int)

   The consistency level desired for read operations. Options are
   the same as for write consistency level.

   Example 1.7. Set rd_consistency_level parameter
...
modparam("cachedb_cassandra", "rd_consistency_level",7);
...

1.5.7. exec_threshold (int)

   The maximum number of microseconds that a cassandra cache query
   can last. Anything above the threshold will trigger a warning
   message to the log

   Default value is “0 ( unlimited - no warnings )”.

   Example 1.8. Set exec_threshold parameter
...
modparam("cachedb_cassandra", "exec_threshold", 100000)
...

1.6. Exported Functions

   The module does not export functions to be used in
   configuration script.

1.7. Known issues

   Due to the fact that Cassandra cannot store counters and
   regular columns in the same ColumnFamily, add() and sub()
   methods are not exported through the Key-Value interface.

   Also, the module does not currently support Authentication.

   Future realeases of this module will address this issue.

Chapter 2. Contributors

2.1. By Commit Statistics

   Table 2.1. Top contributors by DevScore^(1), authored
   commits^(2) and lines added/removed^(3)
     Name DevScore Commits Lines ++ Lines --
   1. Vlad Paiu (@vladpaiu) 177 7 21444 38
   2. Liviu Chircu (@liviuchircu) 7 5 24 42
   3. Razvan Crainea (@razvancrainea) 4 2 12 12
   4. fabriziopicconi 4 2 5 5
   5. Julián Moreno Patiño 3 1 1 1
   6. Peter Lemenkov (@lemenkov) 3 1 1 1
   7. Jarrod Baumann (@jarrodb) 2 1 2 0
   8. Bogdan-Andrei Iancu (@bogdan-iancu) 2 1 1 0
   9. Vlad Patrascu (@rvlad-patrascu) 2 1 1 0

   (1) DevScore = author_commits + author_lines_added /
   (project_lines_added / project_commits) + author_lines_deleted
   / (project_lines_deleted / project_commits)

   (2) including any documentation-related commits, excluding
   merge commits. Regarding imported patches/code, we do our best
   to count the work on behalf of the proper owner, as per the
   "fix_authors" and "mod_renames" arrays in
   opensips/doc/build-contrib.sh. If you identify any
   patches/commits which do not get properly attributed to you,
   please submit a pull request which extends "fix_authors" and/or
   "mod_renames".

   (3) ignoring whitespace edits, renamed files and auto-generated
   files

2.2. By Commit Activity

   Table 2.2. Most recently active contributors^(1) to this module
                     Name                   Commit Activity
   1. Peter Lemenkov (@lemenkov)          Jun 2018 - Jun 2018
   2. Liviu Chircu (@liviuchircu)         Mar 2014 - Jun 2018
   3. Vlad Patrascu (@rvlad-patrascu)     May 2017 - May 2017
   4. Julián Moreno Patiño                Feb 2016 - Feb 2016
   5. Razvan Crainea (@razvancrainea)     Feb 2012 - Aug 2015
   6. Jarrod Baumann (@jarrodb)           May 2015 - May 2015
   7. Bogdan-Andrei Iancu (@bogdan-iancu) Oct 2014 - Oct 2014
   8. fabriziopicconi                     Apr 2014 - Apr 2014
   9. Vlad Paiu (@vladpaiu)               Dec 2011 - Nov 2013

   (1) including any documentation-related commits, excluding
   merge commits

Chapter 3. Documentation

3.1. Contributors

   Last edited by: Peter Lemenkov (@lemenkov), Liviu Chircu
   (@liviuchircu), Julián Moreno Patiño, Vlad Paiu (@vladpaiu),
   Razvan Crainea (@razvancrainea).

   Documentation Copyrights:

   Copyright © 2011 www.opensips-solutions.com
